{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kiram\\\\OneDrive\\\\Desktop\\\\devopsproject\\\\djangoProject\\\\react-frontend\\\\src\\\\components\\\\IncidentWorkflow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction IncidentWorkflow() {\n  _s();\n  const [incidents, setIncidents] = useState([]);\n  const [selectedIncident, setSelectedIncident] = useState(null);\n  useEffect(() => {\n    fetchIncidents();\n  }, []);\n  const fetchIncidents = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/api/incidents/');\n      const data = await response.json();\n      setIncidents(data);\n    } catch (error) {\n      console.error('Error fetching incidents:', error);\n    }\n  };\n  const handleSelectIncident = incident => {\n    setSelectedIncident(incident);\n  };\n  const handleEscalateIncident = async incidentId => {\n    try {\n      const response = await fetch(`http://localhost:8000/api/incidents/${incidentId}/escalate/`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n      console.log('Incident escalated:', data);\n      fetchIncidents(); // Refresh the incidents list\n    } catch (error) {\n      console.error('Error escalating incident:', error);\n    }\n  };\n  const handleResolveIncident = async incidentId => {\n    try {\n      const response = await fetch(`http://localhost:8000/api/incidents/${incidentId}/resolve/`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n      console.log('Incident resolved:', data);\n      fetchIncidents(); // Refresh the incidents list\n    } catch (error) {\n      console.error('Error resolving incident:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"incident-workflow\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Incident Resolution Workflow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: incidents.map(incident => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => handleSelectIncident(incident),\n          children: [incident.title, \" - \", incident.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), selectedIncident && selectedIncident.id === incident.id && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleEscalateIncident(incident.id),\n            children: \"Escalate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleResolveIncident(incident.id),\n            children: \"Resolve\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this)]\n      }, incident.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(IncidentWorkflow, \"HYhcX/GIdPZm47zEY1NinAihIrk=\");\n_c = IncidentWorkflow;\nexport default IncidentWorkflow;\nvar _c;\n$RefreshReg$(_c, \"IncidentWorkflow\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","IncidentWorkflow","_s","incidents","setIncidents","selectedIncident","setSelectedIncident","fetchIncidents","response","fetch","data","json","error","console","handleSelectIncident","incident","handleEscalateIncident","incidentId","method","headers","log","handleResolveIncident","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","title","status","id","_c","$RefreshReg$"],"sources":["C:/Users/kiram/OneDrive/Desktop/devopsproject/djangoProject/react-frontend/src/components/IncidentWorkflow.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction IncidentWorkflow() {\r\n  const [incidents, setIncidents] = useState([]);\r\n  const [selectedIncident, setSelectedIncident] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchIncidents();\r\n  }, []);\r\n\r\n  const fetchIncidents = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:8000/api/incidents/');\r\n      const data = await response.json();\r\n      setIncidents(data);\r\n    } catch (error) {\r\n      console.error('Error fetching incidents:', error);\r\n    }\r\n  };\r\n\r\n  const handleSelectIncident = (incident) => {\r\n    setSelectedIncident(incident);\r\n  };\r\n\r\n  const handleEscalateIncident = async (incidentId) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:8000/api/incidents/${incidentId}/escalate/`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      const data = await response.json();\r\n      console.log('Incident escalated:', data);\r\n      fetchIncidents(); // Refresh the incidents list\r\n    } catch (error) {\r\n      console.error('Error escalating incident:', error);\r\n    }\r\n  };\r\n\r\n  const handleResolveIncident = async (incidentId) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:8000/api/incidents/${incidentId}/resolve/`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      const data = await response.json();\r\n      console.log('Incident resolved:', data);\r\n      fetchIncidents(); // Refresh the incidents list\r\n    } catch (error) {\r\n      console.error('Error resolving incident:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"incident-workflow\">\r\n      <h2>Incident Resolution Workflow</h2>\r\n      <ul>\r\n        {incidents.map((incident) => (\r\n          <li key={incident.id}>\r\n            <div onClick={() => handleSelectIncident(incident)}>\r\n              {incident.title} - {incident.status}\r\n            </div>\r\n            {selectedIncident && selectedIncident.id === incident.id && (\r\n              <div>\r\n                <button onClick={() => handleEscalateIncident(incident.id)}>Escalate</button>\r\n                <button onClick={() => handleResolveIncident(incident.id)}>Resolve</button>\r\n              </div>\r\n            )}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default IncidentWorkflow;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}