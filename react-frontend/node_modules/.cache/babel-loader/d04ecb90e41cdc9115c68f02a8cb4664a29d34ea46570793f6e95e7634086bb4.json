{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kiram\\\\ticket-react-app\\\\src\\\\components\\\\ContentComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ContentComponent() {\n  _s();\n  const [items, setItems] = useState([]);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    // Simulates componentDidMount, fetches data on component mount\n    fetch('http://localhost:8000/api/items/').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      setItems(data); // Stores the data in state\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n      setError('Failed to load data.'); // Handles any errors\n    });\n  }, []); // The empty dependency array [] means this effect runs only once similar to componentDidMount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"This is a dynamically added message.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this), items.map(item => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"item\",\n      children: item.name\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this) // Renders items dynamically, uses `key` for React elements\n    )]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(ContentComponent, \"DpZWvPShZEDXohyZ1H0x3d3jL2s=\");\n_c = ContentComponent;\nexport default ContentComponent;\nvar _c;\n$RefreshReg$(_c, \"ContentComponent\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ContentComponent","_s","items","setItems","error","setError","fetch","then","response","ok","Error","json","data","catch","console","id","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","className","name","_c","$RefreshReg$"],"sources":["C:/Users/kiram/ticket-react-app/src/components/ContentComponent.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nfunction ContentComponent() {\r\n  const [items, setItems] = useState([]);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Simulates componentDidMount, fetches data on component mount\r\n    fetch('http://localhost:8000/api/items/')\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        setItems(data); // Stores the data in state\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching data:', error);\r\n        setError('Failed to load data.'); // Handles any errors\r\n      });\r\n  }, []); // The empty dependency array [] means this effect runs only once similar to componentDidMount\r\n\r\n  return (\r\n    <div id=\"content\">\r\n      <p>This is a dynamically added message.</p>\r\n      {error && <p>{error}</p>}\r\n      {items.map(item => (\r\n        <p className=\"item\" key={item.id}>{item.name}</p> // Renders items dynamically, uses `key` for React elements\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContentComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd;IACAU,KAAK,CAAC,kCAAkC,CAAC,CACtCC,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;MACZT,QAAQ,CAACS,IAAI,CAAC,CAAC,CAAC;IAClB,CAAC,CAAC,CACDC,KAAK,CAACT,KAAK,IAAI;MACdU,OAAO,CAACV,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CC,QAAQ,CAAC,sBAAsB,CAAC,CAAC,CAAC;IACpC,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEN,OAAA;IAAKgB,EAAE,EAAC,SAAS;IAAAC,QAAA,gBACfjB,OAAA;MAAAiB,QAAA,EAAG;IAAoC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAC1ChB,KAAK,iBAAIL,OAAA;MAAAiB,QAAA,EAAIZ;IAAK;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACvBlB,KAAK,CAACmB,GAAG,CAACC,IAAI,iBACbvB,OAAA;MAAGwB,SAAS,EAAC,MAAM;MAAAP,QAAA,EAAgBM,IAAI,CAACE;IAAI,GAAnBF,IAAI,CAACP,EAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAgB,CAAC,CAAC;IACnD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACnB,EAAA,CA/BQD,gBAAgB;AAAAyB,EAAA,GAAhBzB,gBAAgB;AAiCzB,eAAeA,gBAAgB;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}