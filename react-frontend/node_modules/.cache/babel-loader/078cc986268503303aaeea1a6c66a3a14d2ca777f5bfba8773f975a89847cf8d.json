{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kiram\\\\ticket-react-app\\\\src\\\\components\\\\TicketFormContainer.js\";\n// src/components/TicketFormContainer.js\nimport React from 'react';\nimport TicketForm from './TicketForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TicketFormContainer() {\n  const handleSubmit = async ticketData => {\n    try {\n      const response = await fetch('http://localhost:8000/api/tickets/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': 'your-csrf-token-here' // Adjust as necessary for CSRF protection\n        },\n        body: JSON.stringify(ticketData)\n      });\n      const data = await response.json();\n      console.log('Ticket created:', data);\n    } catch (error) {\n      console.error('Error creating ticket:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(TicketForm, {\n    onSubmit: handleSubmit\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this);\n}\n_c = TicketFormContainer;\nexport default TicketFormContainer;\nvar _c;\n$RefreshReg$(_c, \"TicketFormContainer\");","map":{"version":3,"names":["React","TicketForm","jsxDEV","_jsxDEV","TicketFormContainer","handleSubmit","ticketData","response","fetch","method","headers","body","JSON","stringify","data","json","console","log","error","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/kiram/ticket-react-app/src/components/TicketFormContainer.js"],"sourcesContent":["// src/components/TicketFormContainer.js\r\nimport React from 'react';\r\nimport TicketForm from './TicketForm';\r\n\r\nfunction TicketFormContainer() {\r\n  const handleSubmit = async (ticketData) => {\r\n    try {\r\n      const response = await fetch('http://localhost:8000/api/tickets/', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-CSRFToken': 'your-csrf-token-here'  // Adjust as necessary for CSRF protection\r\n        },\r\n        body: JSON.stringify(ticketData)\r\n      });\r\n      const data = await response.json();\r\n      console.log('Ticket created:', data);\r\n    } catch (error) {\r\n      console.error('Error creating ticket:', error);\r\n    }\r\n  };\r\n\r\n  return <TicketForm onSubmit={handleSubmit} />;\r\n}\r\n\r\nexport default TicketFormContainer;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,mBAAmBA,CAAA,EAAG;EAC7B,MAAMC,YAAY,GAAG,MAAOC,UAAU,IAAK;IACzC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;QACjEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,aAAa,EAAE,sBAAsB,CAAE;QACzC,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,UAAU;MACjC,CAAC,CAAC;MACF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClCC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEH,IAAI,CAAC;IACtC,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,oBAAOf,OAAA,CAACF,UAAU;IAACkB,QAAQ,EAAEd;EAAa;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC/C;AAACC,EAAA,GAnBQpB,mBAAmB;AAqB5B,eAAeA,mBAAmB;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}